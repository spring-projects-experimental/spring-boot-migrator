---
anchors:
  git-repo-resource-source: &git-repo-resource-source
    uri: ((github-repo-uri)) # https://github.com/spring-projects-experimental/spring-boot-migrator
    username: ((github-repo-user)) # fabapp2
 #   password: ((github-ci-release-token))
    branch: ((branch))
  registry-image-resource-source: &registry-image-resource-source
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: latest #((milestone))
    registry_mirror:
      host: ((docker-hub-mirror))
      username: ((docker-hub-mirror-username))
      password: ((docker-hub-mirror-password))
  docker-hub-mirror-vars: &docker-hub-mirror-vars
    docker-hub-mirror: ((docker-hub-mirror))
    docker-hub-mirror-username: ((docker-hub-mirror-username))
    docker-hub-mirror-password: ((docker-hub-mirror-password))

resource_types:
  - name: registry-image
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      tag: 1.5.0
  - name: git-pull-request
    type: docker-image
    source:
      repository: ((github-repo-name))
  - name: pull-request
    type: registry-image
    source:
      repository: teliaoss/github-pr-resource
      tag: v0.23.0


resources:
# The ci dir in the repo, used to trigger an image build on change
  - name: ci-images-git-repo
    type: git
    icon: github
    source:
      uri: ((github-repo-uri))
      branch: ((branch))
      paths: ["ci/images/*"]
# The git repo
  - name: git-repo
    type: git
    icon: github
    source:
      <<: *git-repo-resource-source
# The image used to run the build
  - name: ci-image
    type: registry-image
    icon: docker
    source:
      <<: *registry-image-resource-source
      repository: fkrueger096/spring-boot-migrator-ci
      tag: latest

#  - name: github-pre-release
#    type: github-release
#    icon: briefcase-download-outline
#    source:
#      owner: spring-projects
#      repository: spring-boot
#      access_token: ((github-ci-release-token))
#      pre_release: true
#      release: false
  - name: github-release
    type: github-release
    icon: briefcase-download
    source:
      owner: spring-projects
      repository: spring-boot
      access_token: ((github-ci-release-token))
      pre_release: false


# git PR
  - name: git-pull-request
    type: pull-request
    icon: source-pull
    source:
      access_token: ((github-ci-pull-request-token))
      repository: ((github-repo-name))
      base_branch: main
      ignore_paths: [ "ci/*" ]

image_resource:
  type: registry-image
  source:
    repository: concourse/oci-build-task
    tag: 0.10.0
    registry_mirror:
      host: ((docker-hub-mirror))
      username: ((docker-hub-mirror-username))
      password: ((docker-hub-mirror-password))

jobs:
# Build and push CI image when ci-images-git-repo changed
  - name: build-ci-images
    plan:
      - get: ci-images-git-repo
        trigger: true
      - get: git-repo
      - in_parallel:
          - task: build-ci-image
            privileged: true
            file: git-repo/ci/tasks/build-ci-image.yml
            output_mapping:
              image: ci-image
            vars:
              ci-image-name: ci-image
              <<: *docker-hub-mirror-vars
      - in_parallel:
          - put: ci-image
            params:
              image: ci-image/image.tar

# Build application
  - name: build
    public: true
    plan:
      - in_parallel:
        - get: ci-image
        - get: git-repo
          trigger: true
      - task: compile
        privileged: true
#        caches:
#          - path: .m2/
        image: ci-image
        params:
        file: git-repo/ci/tasks/maven-build.yml
#      - in_parallel:
#          fail_fast: true
#          steps:
#          - task: run-unit-tests
#            image: ci-image
#            file: git-repo/ci/tasks/maven-unit-test.yml
#          - task: run-integration-tests
#            image: ci-image
#            file: git-repo/ci/tasks/maven-integration-test.yml

#  - name: set-feature-pipelines
#    plan:
#      - in_parallel:
#          - get: feature-branches
#            trigger: true
#          - get: git-repo
#      - load_var: branches
#        file: feature-branches/branches.json
#      - across:
#          - var: branch
#            values: ((.:branches))
#        set_pipeline: dev
#        file: examples/pipelines/multi-branch/template.yml
#        instance_vars: {feature: ((.:branch.groups.feature))}
#        vars: {branch: ((.:branch.name))}

# Build every new PR
  - name: build-pull-requests
    serial: true
    public: true
    plan:
      - get: ci-image
      - get: git-repo
        resource: git-pull-request
        trigger: true
        version: every
      - do:
          - put: git-pull-request
            params:
              path: git-repo
              status: pending
          - task: build-project
            privileged: true
            image: ci-image
            file: git-repo/ci/tasks/build-pr-project.yml
#            timeout: 30m # ((task-timeout))
        on_success:
          put: git-pull-request
          params:
            path: git-repo
            status: success
        on_failure:
          put: git-pull-request
          params:
            path: git-repo
            status: failure

  - name: create-github-release
    serial: true
    plan:
      - get: ci-image
      - get: git-repo
#      - get: artifactory-repo
#        trigger: true
#        passed: [promote-release]
#        params:
#          download_artifacts: false
#          save_build_info: true
      - task: generate-changelog
        file: git-repo/ci/tasks/generate-changelog.yml
        params:
          RELEASE_TYPE: RELEASE
          GITHUB_USERNAME: ((github-username))
          GITHUB_TOKEN: ((github-ci-release-token))
        vars:
          <<: *docker-hub-mirror-vars
      - put: github-release
        params:
          name: generated-changelog/tag
          tag: generated-changelog/tag
          body: generated-changelog/changelog.md

groups:
  - name: "builds"
    jobs: ["build"]
  - name: "ci-images"
    jobs: ["build-ci-images"]
  - name: "pull-requests"
    jobs: ["build-pull-requests"]
  - name: "releases"
    jobs: ["create-github-release"]

