- name: boot-2.7-3.0-upgrade-report2
  description: Create a report for Spring Boot Upgrade from 2.7.x to 3.0.x
  condition:
    type: org.springframework.sbm.boot.common.conditions.IsSpringBootProject
    versionPattern: "2\\.4\\..*|2\\.5\\..*"

  actions:

    - type: org.springframework.sbm.boot.upgrade_27_30.report.SpringBootUpgradeReportAction
      file: report
      condition:
        type: org.springframework.sbm.common.migration.conditions.TrueCondition

      dataProvider: org.springframework.sbm.boot.upgrade_27_30.report.SpringBootUpgradeReportDataProvider

      header: |-
        [[index]]
        = Spring Boot 3 Upgrade Report
        <#if contributors?has_content>
        <#list contributors as contributor>
        ${contributor.name}<#sep>, </#sep>
        </#list>
        </#if>
        :source-highlighter: highlight.js
        :highlightjs-languages: java
        :linkcss:
        :doctype: book
        :idprefix:
        :idseparator: -
        :toc: left
        :sectnumlevels: 2
        :toclevels: 2
        :tabsize: 4
        :numbered:
        :sectanchors:
        :sectnums:
        :hide-uri-scheme:
        :docinfo: shared,private
        :attribute-missing: warn
        :chomp: default headers packages
        :spring-boot-artifactory-repo: snapshot
        :github-tag: main
        :spring-boot-version: current

        == Introduction
        <#assign coordinates>${scannedCoordinate}</#assign>
        [cols="1h,3"]
        |===
        | Scanned dir | `${scannedProjectRoot}`
        | Revision | <#if revision?has_content>`${revision}`<#else>Scanned project not under Git</#if>
        <#if projectName?has_content>
        | Project name |  ${projectName}
        </#if>
        | Coordinate | `${scannedCoordinate}`
        | Boot version | `${bootVersion}`
        <#if numberOfChanges?has_content>
        | Changes | ${numberOfChanges}
        </#if>
        |===
        
        The application was scanned and matched against the changes listed in the
        https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes[Spring Boot 2.5 Release Notes]
        as well as from https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-5.x[Spring Framework 5.x Release Notes].
        
        The Relevant Changes section lists all potentially required changes to upgrade the scanned application to Spring Boot 2.5.6.
        
        NOTE: JDK 17 is required for Spring Boot 3
        
        == Relevant Changes
        
        This section lists the changes SBM found to be applicable to upgrade the scanned application to Spring Boot 3.0.0. 

      sections:

        - title: Changes to Data Properties
          helper: org.springframework.sbm.boot.upgrade_27_30.report.helper.ChangesToDataPropertiesHelper
          change: |-
            The data prefix has been reserved for Spring Data and any properties under the `data` prefix imply that Spring
            Data is required on the classpath.
          affected: |-
            The scan found properties with `spring.data` prefix but no dependency matching `org.springframework.data:.*`.
            
            <#list matches as match>
              * file://${match.absolutePath}[`${match.relativePath}`]
              <#list match.propertiesFound as property>
              ** `${property}`
              </#list>
            </#list>

          remediation: |-
            Either add `spring-data` dependency, rename the property or remove it in case it's not required anymore.
          gitHubIssue: 123
          recipe: boot-2.7-3.0-upgrade-report
          contributors:
            - "Fabian Krüger[@fabapp2]"



        - title: Logging Date Format
          helper: org.springframework.sbm.boot.upgrade_27_30.report.helper.LoggingDateFormatHelper
          change: |-
            The default format for the date and time component of log messages for Logback and Log4j2 has changed to 
            align with the ISO-8601 standard. The new default format `yyyy-MM-dd’T’HH:mm:ss.SSSXXX` uses a `T` to 
            separate the date and time instead of a space character and adds the timezone offset to the end. 
            The `LOG_DATEFORMAT_PATTERN` environment variable or `logging.pattern.dateformat` property can be used to 
            restore the previous default value of `yyyy-MM-dd HH:mm:ss.SSS`.
          affected: |-
            The scan found no property `logging.pattern.dateformat`.
          remediation: |-
            Set logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS to fall back to the previous log format.
          gitHubIssue: 489
          recipe: boot-2.7-3.0-upgrade-report
          contributors:
            - "Fabian Krüger[@fabapp2]"

      footer: |-
        We want to say thank you to all Contributors:
        
        Generated by Spring Boot Migrator (experimental)