<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/db"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            targetNamespace="http://www.mulesoft.org/schema/mule/db"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="./mule.xsd"/>
    <xsd:import namespace="http://www.springframework.org/schema/beans"
                schemaLocation="./spring-beans-4.3.xsd"/>

    <xsd:complexType name="abstractDbMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMessageProcessorType">
                <xsd:attributeGroup ref="dbMessageProcessorAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="abstractDbMixedContentMessageProcessorType" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMixedContentMessageProcessorType">
                <xsd:attributeGroup ref="dbMessageProcessorAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="dbMessageProcessorAttributes">
        <xsd:attribute name="config-ref" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Defines the configuration parameters for the JDBC connection.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="source" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The expression used to obtain the value used to calculate parameters. Default is
                    empty, so parameters are calculated from the payload.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="target" type="xsd:string" default="#[payload]">
            <xsd:annotation>
                <xsd:documentation>
                    The enricher expression used to enrich the current message with the result
                    of the SQL processing.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="transactionalAction" type="transactionalActionType" default="JOIN_IF_POSSIBLE">
            <xsd:annotation>
                <xsd:documentation>
                    Indicates how the message processor handles transactions.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="queryTimeout" type="xsd:integer" default="0">
            <xsd:annotation>
                <xsd:documentation>
                    Indicates the minimum amount of time in seconds before the JDBC driver attempts to cancel a running statement. No timeout is used by default.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

    <xsd:complexType name="advancedDbMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="abstractDbMessageProcessorType">
                <xsd:sequence>
                    <xsd:group ref="parameterizedQuery"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="select" type="selectMessageProcessorType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Selects data from a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="selectMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="advancedDbMessageProcessorType">
                <xsd:sequence>
                    <xsd:element ref="abstractQueryResultSetHandler" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>

                <xsd:attribute name="streaming" type="xsd:boolean" use="optional" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates if result sets must be returned as an iterator or as a list of maps.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>

                <xsd:attribute name="fetchSize" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>

                <xsd:attribute name="maxRows" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            Sets the limit for the maximum number of rows that any ResultSet object generated by this
                            message processor can contain for the given number. If the limit is exceeded, the excess rows
                            are silently dropped.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="update" type="updateMessageProcessorType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Updates data in a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="updateMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="advancedDbMessageProcessorType">
                <xsd:attribute name="bulkMode" type="xsd:boolean" use="optional" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates whether or not a bulk update is requested. When true, payload is required to be a
                            collection and a bulk update executes for each item in the collection.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="delete" type="updateMessageProcessorType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Deletes data from a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="insert" type="insertMessageProcessorType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Inserts data into a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="insertMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="advancedDbMessageProcessorType">
                <xsd:attributeGroup ref="autoGeneratedKeyAttributes"/>
                <xsd:attribute name="bulkMode" type="xsd:boolean" use="optional" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates whether or not a bulk update is requested. When true, payload is required to be a
                            collection and a bulk update executes for each item in the collection.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="execute-ddl" type="executeDdlMessageProcessorType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Enables execution of DDL queries against a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="executeDdlMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="abstractDbMessageProcessorType">
                <xsd:sequence>
                    <xsd:element name="dynamic-query" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="bulk-execute" type="bulkUpdateMessageProcessorType" substitutionGroup="mule:abstract-mixed-content-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Updates data in a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="bulkUpdateMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="abstractDbMixedContentMessageProcessorType">
                <xsd:attribute name="file" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The location of a file to load. The file can point to a resource on the classpath or on a disk.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="stored-procedure" type="executeStoredProcedureMessageProcessorType"
                 substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Executes a SQL statement in a database.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="executeStoredProcedureMessageProcessorType">
        <xsd:complexContent>
            <xsd:extension base="abstractDbMessageProcessorType">
                <xsd:sequence>
                    <xsd:group ref="parameterizedStoredProcedureQuery" maxOccurs="unbounded"/>
                </xsd:sequence>

                <xsd:attribute name="streaming" type="xsd:boolean" use="optional" default="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates if result sets must be returned as an iterator or as list of maps.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="fetchSize" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>

                <xsd:attribute name="maxRows" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            Sets the limit for the maximum number of rows that any ResultSet object generated by this
                            message processor can contain for the given number. If the limit is exceeded, the excess rows
                            are silently dropped.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>

                <xsd:attributeGroup ref="autoGeneratedKeyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="transactionalActionType">
        <xsd:annotation>
            <xsd:documentation>
                The type of action the transaction should take, one of the following:
                ALWAYS_JOIN - Always expects a transaction to be in progress when a message is received. If there is no
                transaction, an exception is thrown.
                JOIN_IF_POSSIBLE - Join the current transaction if one is available. Otherwise, no transaction is
                created.
                NOT_SUPPORTED - Execute outside any existent transaction.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="ALWAYS_JOIN"/>
            <xsd:enumeration value="JOIN_IF_POSSIBLE"/>
            <xsd:enumeration value="NOT_SUPPORTED"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:group name="parameterizedQuery">
        <xsd:choice>
            <xsd:sequence>
                <xsd:element name="template-query-ref" type="TemplateRefType" minOccurs="0" maxOccurs="1"/>
                <xsd:element name="in-param" type="InputParamType" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:sequence>
                <xsd:element name="parameterized-query" type="xsd:string" minOccurs="0" maxOccurs="1"/>
                <xsd:group ref="queryParameter" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:element name="dynamic-query" type="xsd:string" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="parameterizedStoredProcedureQuery">
        <xsd:choice>
            <xsd:sequence>
                <xsd:element name="template-query-ref" type="TemplateRefType" minOccurs="0" maxOccurs="1"/>
                <xsd:element name="in-param" type="InputParamType" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:sequence>
                <xsd:element name="parameterized-query" type="xsd:string" minOccurs="0" maxOccurs="1"/>
                <xsd:group ref="callParameter" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:element name="dynamic-query" type="xsd:string" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
    </xsd:group>

    <xsd:element name="abstractQueryResultSetHandler" abstract="true" type="abstractQueryResultSetHandlerType">
    </xsd:element>

    <xsd:complexType name="abstractQueryResultSetHandlerType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="template-query" type="TemplateSqlDefinitionType" substitutionGroup="mule:abstract-extension"/>
    <xsd:complexType name="TemplateSqlDefinitionType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:sequence>
                    <xsd:choice>
                        <xsd:sequence>
                            <xsd:element name="parameterized-query" type="ParameterizedQueryDefinitionType" minOccurs="1" maxOccurs="1"/>

                            <xsd:element name="in-param" type="TemplateInputParamType" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>

                        <xsd:element name="dynamic-query" type="xsd:string" minOccurs="1" maxOccurs="1"/>

                        <xsd:sequence>
                            <xsd:element name="template-query-ref" type="TemplateRefType" minOccurs="1" maxOccurs="1"/>
                            <xsd:element name="in-param" type="OverriddenTemplateInputParamType" minOccurs="1" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:choice>
                </xsd:sequence>
                <xsd:attribute name="name" type="mule:substitutableName" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Identifies the query so that other elements can reference it.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ParameterizedQueryDefinitionType" mixed="true">
        <xsd:annotation>
            <xsd:documentation>
                Defines a SQL query that can contain inline parameters definitions.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:attribute name="file" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Location of a file that defines a query in a separate file, useful when the queries are too complex. The file can point to a resource on the classpath or on a disk.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:group name="queryParameter">
        <xsd:choice>
            <xsd:element name="in-param" type="InputParamType"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="callParameter">
        <xsd:choice>
            <xsd:element name="in-param" type="InputParamType"/>
            <xsd:element name="out-param" type="OutputParamDefinitionType"/>
            <xsd:element name="inout-param" type="InOutParamDefinitionType"/>
        </xsd:choice>
    </xsd:group>

    <xsd:complexType name="OutputParamDefinitionType">
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the output parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="ExtendedJdbcDataTypes" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Parameter type name.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="InOutParamDefinitionType">
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the output parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The value of the parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="ExtendedJdbcDataTypes" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Parameter type name.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="TemplateRefType">
        <xsd:attribute name="name" type="mule:substitutableName" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="InputParamType">
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the input parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The value of the parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="ExtendedJdbcDataTypes" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Parameter type name.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="TemplateInputParamType">
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the template input parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="defaultValue" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The default value of the parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="ExtendedJdbcDataTypes" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Parameter type name.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="OverriddenTemplateInputParamType">
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the input parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="defaultValue" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The default value of the parameter.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:simpleType name="ExtendedJdbcDataTypes">
        <xsd:annotation>
            <xsd:documentation>
                Data types for the fields and parameters.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:union memberTypes="JdbcDataTypes xsd:string"/>
    </xsd:simpleType>

    <xsd:simpleType name="JdbcDataTypes">
        <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="BIT"/>
            <xsd:enumeration value="TINYINT"/>
            <xsd:enumeration value="SMALLINT"/>
            <xsd:enumeration value="INTEGER"/>
            <xsd:enumeration value="BIGINT"/>
            <xsd:enumeration value="FLOAT"/>
            <xsd:enumeration value="REAL"/>
            <xsd:enumeration value="DOUBLE"/>
            <xsd:enumeration value="NUMERIC"/>
            <xsd:enumeration value="DECIMAL"/>
            <xsd:enumeration value="CHAR"/>
            <xsd:enumeration value="VARCHAR"/>
            <xsd:enumeration value="LONGVARCHAR"/>
            <xsd:enumeration value="DATE"/>
            <xsd:enumeration value="TIME"/>
            <xsd:enumeration value="TIMESTAMP"/>
            <xsd:enumeration value="BINARY"/>
            <xsd:enumeration value="VARBINARY"/>
            <xsd:enumeration value="LONGVARBINARY"/>
            <xsd:enumeration value="NULL"/>
            <xsd:enumeration value="OTHER"/>
            <xsd:enumeration value="JAVA_OBJECT"/>
            <xsd:enumeration value="DISTINCT"/>
            <xsd:enumeration value="STRUCT"/>
            <xsd:enumeration value="ARRAY"/>
            <xsd:enumeration value="BLOB"/>
            <xsd:enumeration value="CLOB"/>
            <xsd:enumeration value="REF"/>
            <xsd:enumeration value="DATALINK"/>
            <xsd:enumeration value="BOOLEAN"/>
            <xsd:enumeration value="ROWID"/>
            <xsd:enumeration value="NCHAR"/>
            <xsd:enumeration value="NVARCHAR"/>
            <xsd:enumeration value="LONGNVARCHAR"/>
            <xsd:enumeration value="NCLOB"/>
            <xsd:enumeration value="SQLXML"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:attributeGroup name="autoGeneratedKeyAttributes">
        <xsd:attribute name="autoGeneratedKeys" type="xsd:boolean" use="optional" default="false">
            <xsd:annotation>
                <xsd:documentation>
                    Indicates when to make auto-generated keys available for retrieval.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="autoGeneratedKeysColumnIndexes" type="xsd:string" use="optional" default="">
            <xsd:annotation>
                <xsd:documentation>
                    Comma-separated list of column indexes that indicates which auto-generated keys to make
                    available for retrieval.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="autoGeneratedKeysColumnNames" type="xsd:string" use="optional" default="">
            <xsd:annotation>
                <xsd:documentation>
                    Comma separated list of column names that indicates which auto-generated keys should be made
                    available for retrieval.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

    <!-- Database configuration -->

    <xsd:element name="abstract-config" abstract="true" substitutionGroup="mule:abstract-shared-extension">
        <xsd:annotation>
            <xsd:documentation>
                Placeholder for database configuration elements.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="DatabaseConfigType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:sequence>
                    <xsd:element ref="pooling-profile"  minOccurs="0" maxOccurs="1"/>
                    <xsd:element ref="connection-properties" minOccurs="0" maxOccurs="1" />
                    <xsd:element ref="data-types" minOccurs="0" maxOccurs="1" />
                    <xsd:element ref="mule:abstract-reconnection-strategy" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="name" type="mule:substitutableName" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Identifies the database configuration so other elements can reference it.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="dataSource-ref" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Reference to a JDBC DataSource object. This object is typically created using Spring. When
                            using XA transactions, an XADataSource object must be provided.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="url" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            URL used to connect to the database. Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="useXaTransactions" type="xsd:boolean" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates whether or not the created datasource has to support XA transactions. Default is
                            false.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="driverClassName" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Fully-qualified name of the database driver class. Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="connectionTimeout" type="xsd:int" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Maximum time in seconds that this data source will wait while attempting to connect to a
                            database. A value of zero specifies that the timeout is the default system timeout if there
                            is one; otherwise, it specifies that there is no timeout.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="transactionIsolation">
                    <xsd:annotation>
                        <xsd:documentation>
                            The transaction isolation level to set on the driver when connecting the database.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:NMTOKEN">
                            <xsd:enumeration value="NONE"/>
                            <xsd:enumeration value="READ_COMMITTED"/>
                            <xsd:enumeration value="READ_UNCOMMITTED"/>
                            <xsd:enumeration value="REPEATABLE_READ"/>
                            <xsd:enumeration value="SERIALIZABLE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="connection-properties" type="connectionPropertiesType">
        <xsd:annotation>
            <xsd:documentation>
                Specifies a list of custom key-value connectionProperties for the config. Supports MEL expressions.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="connectionPropertiesType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:sequence>
                    <xsd:element name="property" type="propertyType" minOccurs="1" maxOccurs="unbounded" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="propertyType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:attribute name="key" type="xsd:string" use="required" />
                <xsd:attribute name="value" type="xsd:string" use="required" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="data-types" type="CustomDataTypes">
        <xsd:annotation>
            <xsd:documentation>
                Specifies non-standard custom data types.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="CustomDataTypes">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:sequence>
                    <xsd:element name="data-type" type="CustomDataType" minOccurs="1" maxOccurs="unbounded" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="CustomDataType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:attribute name="name" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Name of the data type used by the JDBC driver.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="id" type="xsd:int" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Type identifier used by the JDBC driver.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="className" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Indicates which Java class must be used to map the DB type.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="pooling-profile" type="databasePoolingProfileType">
        <xsd:annotation>
            <xsd:documentation>
                Provides a way to configure database connection pooling.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="databasePoolingProfileType">
        <xsd:attribute name="maxPoolSize" type="mule:substitutableInt">
            <xsd:annotation>
                <xsd:documentation>Maximum number of connections a pool maintains at any given time.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="minPoolSize" type="mule:substitutableInt">
            <xsd:annotation>
                <xsd:documentation>Minimum number of connections a pool maintains at any given time.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="acquireIncrement" type="mule:substitutableInt">
            <xsd:annotation>
                <xsd:documentation>Determines how many connections at a time to try to acquire when the pool is exhausted.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="preparedStatementCacheSize" type="mule:substitutableInt">
            <xsd:annotation>
                <xsd:documentation>Determines how many statements are cached per pooled connection. Defaults to 0, meaning statement caching is disabled.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="maxWaitMillis" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>The number of milliseconds a client calling getConnection() waits for a connection to be checked-in or acquired when the pool is exhausted. Zero means wait indefinitely.</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:element name="generic-config" type="abstractUserAndPasswordDatabaseConfigType"
                 substitutionGroup="abstract-config">
        <xsd:annotation>
            <xsd:documentation>
                Provides a way to define a JDBC configuration for any DB vendor.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="abstractUserAndPasswordDatabaseConfigType">
        <xsd:complexContent>
            <xsd:extension base="DatabaseConfigType">
                <xsd:attribute name="user" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The user that is used for authentication against the database. Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="password" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The password that is used for authentication against the database. Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="derby-config" type="abstractUserAndPasswordDatabaseConfigType"
                 substitutionGroup="abstract-config"/>

    <xsd:element name="oracle-config" type="oracleDatabaseConfigType" substitutionGroup="abstract-config"/>

    <xsd:complexType name="oracleDatabaseConfigType">
        <xsd:complexContent>
            <xsd:extension base="abstractUserAndPasswordDatabaseConfigType">
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configures just the host part of the JDBC URL (and leaves the rest of the default JDBC URL untouched). Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="mule:substitutableInt" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configures just the port part of the JDBC URL (and leaves the rest of the default JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="instance" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configures just the instance part of the JDBC URL (and leaves the rest of the default JDBC URL untouched). Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="mysql-config" type="mySqlDatabaseConfigType" substitutionGroup="abstract-config"/>

    <xsd:complexType name="mySqlDatabaseConfigType">
        <xsd:complexContent>
            <xsd:extension base="abstractUserAndPasswordDatabaseConfigType">
                <xsd:attribute name="database" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            The name of the database. Must be configured unless a full JDBC URL is configured.
                            Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="host" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configures just the host part of the JDBC URL (and leaves the rest of the default
                            JDBC URL untouched). Supports MEL expressions.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="port" type="mule:substitutableInt" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configures just the port part of the JDBC URL (and leaves the rest of the default
                            JDBC URL untouched).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

</xsd:schema>
